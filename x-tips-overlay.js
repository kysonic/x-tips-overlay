Polymer("x-tips-overlay",{opened:!1,current:0,tips:null,active:!0,ready:function(){},attached:function(){this.position.questionMark.bind(this)(),this.tips=this.querySelectorAll("x-tip"),[].forEach.call(this.tips,function(t,i){t.number=i})},position:{questionMark:function(){this.$.controlWrapper.style.marginLeft="right"==this.$.controlWrapper.getAttribute("qhpos")?-(this.$.controlWrapper.clientWidth+10)+"px":this.$.controlWrapper.clientWidth+10+"px",this.$.controlWrapper.style.marginTop="bottom"==this.$.controlWrapper.getAttribute("qvpos")?-(this.$.controlWrapper.clientHeight+10)+"px":"0px"}},toggle:function(){this.opened=!this.opened,this.active&&(this.opened?this.tips[this.current].show():this.tips[this.current].hide())},toggleActive:function(){this.active=!this.active,this.active?this.tips[this.current].show():this.tips[this.current].hide()},currentChanged:function(){this.active&&([].forEach.call(this.tips,function(t){t.hide()}),this.tips[this.current].show())},prev:function(){this.active&&(this.current--,this.current=this.current<0?0:this.current)},next:function(){this.active&&(this.current++,this.current=this.current>this.tips.length-1?this.tips.length-1:this.current)},callTip:function(t){this.active&&(this.opened=!0,this.current==t&&this.tips[this.current].show(),this.current=t)}});